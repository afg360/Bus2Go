plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.protobuf' version '0.9.4'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

android {
    namespace 'dev.mainhq.bus2go'
    compileSdk 34

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
        main {
            proto {
                srcDirs 'src/main/protobuf'
            }
            java {
                srcDirs += "$buildDir/generated/src/proto/release/java"
            }
        }
        test {
            proto {
                srcDir 'src/test/protobuf'
            }
        }
    }

    defaultConfig {
        applicationId "dev.mainhq.bus2go"
        minSdk 26
        targetSdk 34
        versionCode 4
        versionName "v1.2.1-alpha"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildFeatures {
        viewBinding true
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:4.26.1'
    }
    plugins{
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:4.26.1'
        }
    }
    generateProtoTasks {
        // all() returns the collection of all protoc tasks
        all().configureEach { task ->
            // Here you can configure the task
            task.builtins {
                java {
                    option 'lite'
                }
            }
            task.plugins {
            }
        }
        ofSourceSet('main')

        // (Android-only selectors)
        // Returns tasks for a flavor
        ofFlavor('demo')
        // Returns tasks for a buildType
        ofBuildType('release')
        // Returns tasks for a variant
        ofVariant('demoRelease')
        // Returns non-androidTest tasks
        ofNonTest()
        // Return androidTest tasks
        ofTest()
    }
}


dependencies {
    implementation 'androidx.media3:media3-test-utils:1.4.0'
    implementation 'androidx.media3:media3-common:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    def fragment_version = "1.6.2"
    // Java language implementation
    //noinspection GradleDependency
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.core:core-ktx:1.13.1"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'

    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation "androidx.core:core-splashscreen:1.0.1"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    //Preference manager
    implementation "androidx.preference:preference-ktx:1.2.1"
    
    //WorkManager
    def work_version = "2.9.1"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    testImplementation "androidx.work:work-testing:$work_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"
    
    //runtimeOnly 'io.mockk:mockk-android:1.13.17'
    
    
    def data_store_version = "1.1.1"
    //DataStore
    implementation "androidx.datastore:datastore-preferences:$data_store_version"
    //proto datastore
    implementation "androidx.datastore:datastore:$data_store_version"

    //kotlin serializable
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2"
    implementation "org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.5"


    def room_version = "2.6.1"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-testing:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    /* WebRequest apis */
    // Ktor Core
    def ktor_version = "2.0.3"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-websockets:$ktor_version"

    // Ktor HTTP client dependencies
    implementation "io.ktor:ktor-client-okhttp:$ktor_version"
    implementation "io.ktor:ktor-client-cio:$ktor_version"
    
    def mockWebServer_version = "1.2.1"
    testImplementation "com.squareup.okhttp:mockwebserver:$mockWebServer_version"
    androidTestImplementation "com.squareup.okhttp:mockwebserver:$mockWebServer_version"
    
    
    //Protobuf
    def protobuf_version = "4.27.1"
    implementation "com.google.protobuf:protobuf-javalite:$protobuf_version"

    //LeakCanary
    //debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.13'
}
